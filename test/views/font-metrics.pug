doctype html
html(lang="en")
	head
		meta(charset="utf-8")
		meta(http-equiv="X-UA-Compatible" content="IE=edge")
		meta(name="viewport" content="width=device-width,initial-scale=1.0")
		title FontMetrics
		link(rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:100,300,400,500,700,900")
		link(rel="stylesheet" href="https://fonts.googleapis.com/css?family=Material+Icons")
		//- https://github.com/soulwire/FontMetrics
		script(src="/FontMetrics.min.js")
	body
		p See console
		script.
			FontMetrics.settings.chars.capHeight = 'M'
			const fonts = [
				{ name: 'h1', config: { fontWeight:'light', fontSize: 96 }},
				{ name: 'h2', config: { fontWeight:'light', fontSize: 60 }},
				{ name: 'h3', config: { fontWeight:'regular', fontSize: 48 }},
				{ name: 'h4', config: { fontWeight:'regular', fontSize: 34 }},
				{ name: 'h5', config: { fontWeight:'regular', fontSize: 24 }},
				{ name: 'h6', config: { fontWeight:'medium', fontSize: 20 }},
				{ name: 'subtitle1', config: { fontWeight:'regular', fontSize: 16 }},
				{ name: 'subtitle2', config: { fontWeight:'medium', fontSize: 14 }},
				{ name: 'body1', config: { fontWeight:'regular', fontSize: 16 }},
				{ name: 'body2', config: { fontWeight:'regular', fontSize: 14 }},
				{ name: 'button', config: { fontWeight:'medium', fontSize: 14 }},
				{ name: 'caption', config: { fontWeight:'regular', fontSize: 12 }},
				{ name: 'overline', config: { fontWeight:'regular', fontSize: 10 }},
			]

			const weight = (x) => {
				if (x == 'light') { return 300 }
				else if (x == 'regular') { return 400 }
				else if (x == 'medium') { return 500 }
				else {
					throw new Error(`invalid weight: ${x}`)
				}
			}

			const lineHeight = (x) => {
				return Math.ceil((x * 1.4) / 4) * 4
			}

			fonts.forEach(f => {
				const { fontWeight, fontSize } = f.config
				const m = FontMetrics({
					fontFamily: 'Roboto',
					origin: 'baseline',
					fontWeight: weight(fontWeight),
					fontSize
					// Optional (defaults)
				})

				//- console.log(`${f.name} - metrics:`, m)
				console.log(`${f.name} {capHeight: ${Math.round(Math.abs(m.capHeight) * 100000) / 100000}}, lineHeight: ${lineHeight(fontSize)}`)
			})
